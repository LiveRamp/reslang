{
  "namespace": {
    "title": "Segment API - ALPHA",
    "version": "0.0.1"
  },
  "definitions": [
    {
      "kind": "resource-like",
      "future": true,
      "singleton": false,
      "type": "asset-resource",
      "attributes": [
        {
          "name": "id",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "int",
            "name": "int",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "linked": false,
          "modifiers": {
            "mutable": false,
            "optional": false,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": false,
            "queryonly": false,
            "query": false,
            "representation": false
          },
          "constraints": {}
        }
      ],
      "parents": [],
      "short": "Dataset",
      "name": "Dataset",
      "parentShort": "",
      "parentName": "",
      "secondary": false,
      "file": "dataset.reslang"
    },
    {
      "kind": "resource-like",
      "future": false,
      "singleton": false,
      "type": "subresource",
      "attributes": [
        {
          "name": "id",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "long",
            "name": "long",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "linked": false,
          "modifiers": {
            "mutable": false,
            "optional": false,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": false,
            "queryonly": false,
            "query": true,
            "representation": false
          },
          "constraints": {}
        },
        {
          "name": "name",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "string",
            "name": "string",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "linked": false,
          "modifiers": {
            "mutable": false,
            "optional": false,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": false,
            "queryonly": false,
            "query": false,
            "representation": false
          },
          "constraints": {}
        },
        {
          "name": "type",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "FieldTypeEnum",
            "name": "FieldTypeEnum",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "linked": false,
          "modifiers": {
            "mutable": false,
            "optional": false,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": false,
            "queryonly": false,
            "query": false,
            "representation": false
          },
          "constraints": {}
        },
        {
          "name": "enumerable",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "boolean",
            "name": "boolean",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "linked": false,
          "modifiers": {
            "mutable": false,
            "optional": false,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": false,
            "queryonly": false,
            "query": false,
            "representation": false
          },
          "constraints": {}
        },
        {
          "name": "valueCollectionType",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "ValueCollectionTypeEnum",
            "name": "ValueCollectionTypeEnum",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "linked": false,
          "modifiers": {
            "mutable": false,
            "optional": false,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": false,
            "queryonly": false,
            "query": false,
            "representation": false
          },
          "constraints": {}
        },
        {
          "name": "values",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "string",
            "name": "string",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "array": {
            "type": 2
          },
          "linked": false,
          "modifiers": {
            "mutable": true,
            "optional": true,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": false,
            "queryonly": false,
            "query": false,
            "representation": false
          },
          "constraints": {}
        },
        {
          "name": "enabled",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "boolean",
            "name": "boolean",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "linked": false,
          "modifiers": {
            "mutable": false,
            "optional": true,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": true,
            "queryonly": false,
            "query": true,
            "representation": false
          },
          "constraints": {}
        },
        {
          "name": "createdAt",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "datetime",
            "name": "datetime",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "linked": false,
          "modifiers": {
            "mutable": false,
            "optional": false,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": true,
            "queryonly": false,
            "query": false,
            "representation": false
          },
          "constraints": {}
        },
        {
          "name": "updatedAt",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "datetime",
            "name": "datetime",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "linked": false,
          "modifiers": {
            "mutable": false,
            "optional": false,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": true,
            "queryonly": false,
            "query": false,
            "representation": false
          },
          "constraints": {}
        }
      ],
      "operations": [
        {
          "operation": "GET",
          "comment": "Get a Field",
          "errors": []
        },
        {
          "operation": "POST",
          "comment": "Create a new Field",
          "errors": [
            {
              "codes": [
                {
                  "code": "303",
                  "comment": "Field already exists"
                }
              ],
              "struct": {
                "parents": [],
                "short": "Redirection",
                "name": "Redirection",
                "parentShort": "",
                "parentName": ""
              }
            }
          ]
        },
        {
          "operation": "MULTIGET",
          "comment": "Find existing Fields",
          "errors": []
        },
        {
          "operation": "DELETE",
          "comment": "Disable a Field",
          "errors": []
        },
        {
          "operation": "PUT",
          "comment": "Add values to a Field",
          "errors": [
            {
              "codes": [
                {
                  "code": "403",
                  "comment": "Field is not enumerable"
                }
              ],
              "struct": {
                "parents": [],
                "short": "StandardError",
                "name": "StandardError",
                "parentShort": "",
                "parentName": ""
              }
            },
            {
              "codes": [
                {
                  "code": "400",
                  "comment": "Values do not match Field type"
                }
              ],
              "struct": {
                "parents": [],
                "short": "StandardError",
                "name": "StandardError",
                "parentShort": "",
                "parentName": ""
              }
            }
          ]
        }
      ],
      "parents": [
        "Dataset"
      ],
      "short": "Field",
      "name": "Dataset::Field",
      "parentShort": "Dataset",
      "parentName": "Dataset",
      "secondary": false,
      "file": "field.reslang",
      "generateInput": true,
      "generateMulti": true,
      "generateOutput": true,
      "generatePuttable": true
    },
    {
      "kind": "enum",
      "type": "enum",
      "parents": [],
      "short": "FieldTypeEnum",
      "literals": [
        "STRING",
        "NUMERIC"
      ],
      "name": "FieldTypeEnum",
      "parentShort": "",
      "parentName": "",
      "secondary": false,
      "file": "field.reslang",
      "generateInput": true
    },
    {
      "kind": "enum",
      "type": "enum",
      "parents": [],
      "short": "ValueCollectionTypeEnum",
      "literals": [
        "SINGLETON",
        "SET",
        "MULTISET"
      ],
      "name": "ValueCollectionTypeEnum",
      "parentShort": "",
      "parentName": "",
      "secondary": false,
      "file": "field.reslang",
      "generateInput": true
    },
    {
      "kind": "structure",
      "type": "structure",
      "parents": [],
      "short": "Redirection",
      "attributes": [
        {
          "name": "existingFieldUrl",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "string",
            "name": "string",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "linked": false,
          "modifiers": {
            "mutable": false,
            "optional": false,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": false,
            "queryonly": false,
            "query": false,
            "representation": false
          },
          "constraints": {}
        }
      ],
      "name": "Redirection",
      "parentShort": "",
      "parentName": "",
      "secondary": false,
      "file": "field.reslang",
      "generateInput": true
    },
    {
      "kind": "structure",
      "type": "structure",
      "parents": [],
      "short": "StandardError",
      "attributes": [
        {
          "name": "httpStatus",
          "comment": "HTTP error status code for this problem",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "int",
            "name": "int",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "linked": false,
          "modifiers": {
            "mutable": false,
            "optional": false,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": false,
            "queryonly": false,
            "query": false,
            "representation": false
          },
          "constraints": {}
        },
        {
          "name": "errorCode",
          "comment": "Service specific error code, more granular",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "string",
            "name": "string",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "linked": false,
          "modifiers": {
            "mutable": false,
            "optional": false,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": false,
            "queryonly": false,
            "query": false,
            "representation": false
          },
          "constraints": {}
        },
        {
          "name": "message",
          "comment": "General, human readable error message",
          "stringMap": false,
          "type": {
            "parents": [],
            "short": "string",
            "name": "string",
            "parentShort": "",
            "parentName": ""
          },
          "inline": false,
          "linked": false,
          "modifiers": {
            "mutable": false,
            "optional": false,
            "optionalPost": false,
            "optionalPut": false,
            "optionalGet": false,
            "output": false,
            "queryonly": false,
            "query": false,
            "representation": false
          },
          "constraints": {}
        }
      ],
      "name": "StandardError",
      "parentShort": "",
      "parentName": "",
      "secondary": false,
      "file": "local.reslang",
      "generateInput": true
    }
  ],
  "diagrams": [
    {
      "diagram": "main",
      "include": [
        {
          "module": "dataset",
          "parents": [],
          "short": "reslang",
          "name": "dataset.reslang",
          "parentShort": "",
          "parentName": ""
        },
        {
          "module": "field",
          "parents": [],
          "short": "reslang",
          "name": "field.reslang",
          "parentShort": "",
          "parentName": ""
        }
      ],
      "groups": []
    }
  ]
}
