openapi: 3.0.1
info:
  title: Segment API - ALPHA
  description: ''
  version: 0.0.1
servers:
  - url: 'https://api.liveramp.com/dataset'
tags:
  - name: 'Audience::Field'
    description: '(subresource)  '
  - name: 'Disable Audience::Field'
    description: '(sync action)  '
  - name: 'Bulk Disable Audience::Field'
    description: '(bulk sync action)  '
paths:
  '/v1/audiences/{audienceId}/fields':
    post:
      tags:
        - 'Audience::Field'
      operationId: 'Create Audience::Field'
      description: Create a new Field in the provided parent Audience.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceFieldInput'
      responses:
        '201':
          description: Field created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: The id of the Field.
                    type: integer
                    format: int64
        '303':
          description: >-
            A Field with the same type, enumerability, and name already exists
            in this Audience
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldRedirection'
        '404':
          description: Cannot find Audience
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '422':
          description: Input has invalid semantics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: audienceId
          description: Id of parent Audience
          required: true
          schema:
            type: string
    get:
      tags:
        - 'Audience::Field'
      operationId: 'Get Audience::Fields'
      description: |-
        Find existing Fields in the provided parent Audience.
             Note: this only works for core fields (raw string, raw numeric, string enum, and numeric enum).
             All fields of other types will not be included in the response.
      responses:
        '200':
          description: Fields retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of Fields returned by the query
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceFieldMultiResponse'
        '404':
          description: Cannot find Audience
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: audienceId
          description: Id of parent Audience
          required: true
          schema:
            type: string
        - in: query
          name: offset
          description: Offset of the Fields (starting from 0) to include in the response.
          schema:
            type: integer
            format: int32
            default: 0
        - in: query
          name: limit
          description: >-
            Number of Fields to return. If unspecified, 10 max will be returned.
            Maximum value for limit can be 100
          schema:
            type: integer
            format: int32
            default: 10
            maximum: 100
  '/v1/audiences/{audienceId}/fields/{id}':
    get:
      tags:
        - 'Audience::Field'
      operationId: 'Get Audience::Field'
      description: |-
        Find a single existing Field in the provided parent Audience.
             Note: this only works for core fields (raw string, raw numeric, string enum, and numeric enum).
             All fields of other types will not be included in the response.
      responses:
        '200':
          description: Field retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudienceFieldOutput'
        '404':
          description: Cannot find resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: audienceId
          description: Id of parent Audience
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          description: The id of the Field.
          schema:
            type: integer
            format: int64
    put:
      tags:
        - 'Audience::Field'
      operationId: 'Modify Audience::Field'
      description: |-
        Modify the attributes of a Field in the provided parent Audience.
             Currently the only supported operation is adding values to enumerated Fields.
             The list of values passed in will be added to the Field's existing set of values.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceFieldPuttable'
      responses:
        '200':
          description: Field modified successfully
        '404':
          description: Cannot find resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '422':
          description: Input has invalid semantics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: audienceId
          description: Id of parent Audience
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          description: The id of the Field.
          schema:
            type: integer
            format: int64
  '/v1/audiences/{audienceId}/fields/{fieldId}/actions/disable':
    post:
      tags:
        - 'Disable Audience::Field'
      operationId: 'Disable Audience::Field'
      description: |-
        Marks a Field as 'disabled', which means that it will no longer
             be processed in the audience, will no longer be deliverable,
             and will no longer have stats calculated for it.
             Note: this only works for core fields (raw string, raw numeric, string enum, and numeric enum).
             Attempting to disable any other type of field will trigger a 404 Not Found response.
      responses:
        '200':
          description: Disable action completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: integer
                    format: int32
        '404':
          description: Cannot find resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: audienceId
          description: Id of parent Audience
          required: true
          schema:
            type: string
        - in: path
          name: fieldId
          description: Id of parent Field
          required: true
          schema:
            type: integer
            format: int64
  '/v1/audiences/{audienceId}/fields/actions/disable':
    post:
      tags:
        - 'Bulk Disable Audience::Field'
      operationId: 'Bulk Disable Audience::Field'
      description: >-
        Marks the set of input Fields 'disabled', which means that they will no
        longer
             be processed in the audience, will no longer be deliverable,
             and will no longer have stats calculated for them.
             Note: this only works for core fields (raw string, raw numeric, string enum, and numeric enum).
             Attempting to disable any other type of field will trigger a 404 Not Found response.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDisableAudienceFieldInput'
      responses:
        '200':
          description: Disable action completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: integer
                    format: int32
        '404':
          description: Cannot find resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: audienceId
          description: Id of parent Audience
          required: true
          schema:
            type: string
components:
  parameters: {}
  schemas:
    AudienceFieldInput:
      type: object
      properties:
        name:
          description: The name of the Field.
          type: string
          maxLength: 255
        type:
          description: |-
            The type of data that will be imported into this field.
               NUMERIC: only numeric data/values can be added to this Field.
               STRING: any string data or values can be added to this Field.
          $ref: '#/components/schemas/FieldTypeEnum'
        enumerated:
          description: Whether or not the Field's values are enumerated.
          type: boolean
        valueCollectionType:
          description: |-
            Determines how the set of values for this Field should be maintained
               for each audience key that this Field is associated with.
               SINGLETON: only store the value most recently imported for this audience key.
               SET: store all values at most once that were imported for this audience key.
               MULTISET: store all values imported for this audience key potentially duplicate times.
          $ref: '#/components/schemas/ValueCollectionTypeEnum'
        values:
          description: |-
            The list of enum values for the Field.
               This is only allowed if enumerated==true for the Field.
          items:
            type: string
          minItems: 1
          type: array
      required:
        - name
        - type
        - enumerated
        - valueCollectionType
    AudienceFieldOutput:
      type: object
      properties:
        id:
          description: The id of the Field.
          type: integer
          format: int64
        name:
          description: The name of the Field.
          type: string
          maxLength: 255
        type:
          description: |-
            The type of data that will be imported into this field.
               NUMERIC: only numeric data/values can be added to this Field.
               STRING: any string data or values can be added to this Field.
          $ref: '#/components/schemas/FieldTypeEnum'
        enumerated:
          description: Whether or not the Field's values are enumerated.
          type: boolean
        valueCollectionType:
          description: |-
            Determines how the set of values for this Field should be maintained
               for each audience key that this Field is associated with.
               SINGLETON: only store the value most recently imported for this audience key.
               SET: store all values at most once that were imported for this audience key.
               MULTISET: store all values imported for this audience key potentially duplicate times.
          $ref: '#/components/schemas/ValueCollectionTypeEnum'
        values:
          description: |-
            The list of enum values for the Field.
               This is only allowed if enumerated==true for the Field.
          items:
            type: string
          minItems: 1
          type: array
        createdAt:
          description: Timestamp of when the Field was first created.
          type: string
          format: ISO8601 UTC date-time
          example: '2019-04-13T03:35:34Z'
        updatedAt:
          description: Timestamp of the last time the Field's metadata was updated.
          type: string
          format: ISO8601 UTC date-time
          example: '2019-04-13T03:35:34Z'
      required:
        - id
        - name
        - type
        - enumerated
        - valueCollectionType
        - createdAt
        - updatedAt
    AudienceFieldPuttable:
      type: object
      properties:
        values:
          description: |-
            The list of enum values for the Field.
               This is only allowed if enumerated==true for the Field.
          items:
            type: string
          minItems: 1
          type: array
    AudienceFieldMultiResponse:
      type: object
      properties:
        fields:
          description: 'Array of retrieved Audience::Fields'
          type: array
          items:
            $ref: '#/components/schemas/AudienceFieldOutput'
    BulkDisableAudienceFieldInput:
      type: object
      properties:
        fieldIDs:
          description: IDs of Fields to disable.
          items:
            type: integer
            format: int64
            example: 'Link to Audience::Field resource(s) via id(s)'
          type: array
      required:
        - fieldIDs
    FieldTypeEnum:
      type: string
      enum:
        - STRING
        - NUMERIC
    ValueCollectionTypeEnum:
      type: string
      enum:
        - SINGLETON
        - SET
        - MULTISET
    FieldRedirection:
      type: object
      properties:
        existingFieldURL:
          description: ''
          type: string
      required:
        - existingFieldURL
    StandardError:
      type: object
      properties:
        httpStatus:
          description: HTTP error status code for this problem
          type: integer
          format: int32
        errorCode:
          description: 'Service specific error code, more granular'
          type: string
        message:
          description: 'General, human readable error message'
          type: string
      required:
        - httpStatus
        - errorCode
        - message

