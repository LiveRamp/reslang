openapi: 3.0.1
info:
  title: Direct to Distribution API - Alpha
  description: >-
    Early prototype of the API for accessing LiveRamp's Direct to Distribution
    Service
  version: 0.0.1
servers:
  - description: ''
    url: 'https://api.liveramp.com/direct2dist'
tags:
  - name: DistributionRequest
    description: '(request)  '
  - name: Cancel DistributionRequest
    description: >-
      (async action)  Use this action to cancel a given DistributionRequest.
      This will prevent the request from moving to the next stage, but may not
      halt or reverse any current processing of this request. A side-effect of
      this is that we may deliver data to a destination, even if it was
      cancelled. The cancelled DistributionRequest will still be kept in the
      system for bookkeeping
  - name: Retry DistributionRequest
    description: >-
      (async action)  Use this action to retry a failed DistributionRequest.
      This will try to resume a failed request from the last successful step
paths:
  /v1/distribution-requests:
    post:
      tags:
        - DistributionRequest
      operationId: Create DistributionRequest
      description: Use this endpoint to create a new DistributionRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistributionRequestInput'
      responses:
        '201':
          description: DistributionRequest created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
    get:
      tags:
        - DistributionRequest
      operationId: Get DistributionRequests
      description: >-
        Use this endpoint to find existing DistributionRequests. The result set
        is paginated for performance and sorted by createdAt descending by
        default. Response of this method includes a header “X-Total-Count” to
        indicate the total number of records. Use this value along with query
        parameters, offset and limit, to iterate through the entire result set
      responses:
        '200':
          description: DistributionRequests retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of DistributionRequests returned by the query
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributionRequestMultiResponse'
      parameters:
        - in: query
          name: offset
          description: >-
            Offset of the DistributionRequests (starting from 0) to include in
            the response.
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
        - in: query
          name: limit
          description: Number of DistributionRequests to return
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
            maximum: 100
        - in: query
          name: status
          description: Status of the given DistributionRequest
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/StatusEnum'
            type: string
        - in: query
          name: sort
          description: >-
            Default: createdAt:desc


            Sort key and order. The syntax is: sort=key1:asc,key2:desc If a key
            is specified multiple times, we'll use the sort order associated

            with the last occurrence of the key. Example:


            * sort=createdAt:asc

            * sort=statusUpdatedAt:desc,createdAt:asc
          required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/SortTypeEnum'
            type: string
        - in: query
          name: createdAfter
          description: >-
            Default: timestamp 30 days (2592000 seconds) before current request.


            Filter the list of DistributionRequests by when it was created. The
            date-time value must be in UTC, formatted in ISO-8601. Defaults to
            30 days before the request when statusUpdatedBefore or
            statusUpdatedAfter are not set. Example:


            * createdAfter=2019-06-20T16:53:07Z
          required: false
          schema:
            type: string
            format: ISO8601 UTC date-time
        - in: query
          name: createdBefore
          description: >-
            Default: timestamp of current request


            Filter the list of DistributionRequests by when it was created. The
            date-time value must be in UTC, formatted in ISO-8601. Defaults to
            the timestamp that the request was made when statusUpdatedBefore or
            statusUpdatedAfter are not set. Example:


            * createdBefore=2019-06-20T16:53:07Z
          required: false
          schema:
            type: string
            format: ISO8601 UTC date-time
        - in: query
          name: statusUpdatedAfter
          description: >-
            Filter the list of DistributionRequests by when it's status was last
            updated. The date-time value must be in UTC,

            formatted in ISO-8601. Example:


            * statusUpdatedAfter=2019-06-20T16:53:07Z
          required: false
          schema:
            type: string
            format: ISO8601 UTC date-time
        - in: query
          name: statusUpdatedBefore
          description: >-
            Filter the list of DistributionRequests by when it's status was last
            updated. The date-time value must be in UTC,

            formatted in ISO-8601. Defaults to the timestamp of the request when
            statusUpdatedAfter is set. Example:


            * statusUpdatedBefore=2019-06-20T16:53:07Z
          required: false
          schema:
            type: string
            format: ISO8601 UTC date-time
  '/v1/distribution-requests/{id}':
    get:
      tags:
        - DistributionRequest
      operationId: Get DistributionRequest
      description: >-
        Use this endpoint to fetch the overview of a given DistributionRequest,
        including current status, input

        configuration as well as output metadata, if the request has completed
      responses:
        '200':
          description: DistributionRequest retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributionRequestOutput'
        '404':
          description: DistributionRequest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
  '/v1/distribution-requests/{distributionRequestId}/actions/cancel':
    post:
      tags:
        - Cancel DistributionRequest
      operationId: Cancel DistributionRequest asynchronously
      description: ''
      responses:
        '200':
          description: Cancel action completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '202':
          description: 'Cancel action has been accepted, but is not yet complete'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '204':
          description: >-
            Cancel action has already been submitted and we are currently doing
            it
        '404':
          description: Parent resource(s) not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '409':
          description: >-
            Cancel action has been accepted but cannot be processed due to
            current state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: distributionRequestId
          description: Id of parent DistributionRequest
          required: true
          schema:
            type: string
  '/v1/distribution-requests/{distributionRequestId}/actions/retry':
    post:
      tags:
        - Retry DistributionRequest
      operationId: Retry DistributionRequest asynchronously
      description: ''
      responses:
        '200':
          description: Retry action completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '202':
          description: 'Retry action has been accepted, but is not yet complete'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
        '204':
          description: >-
            Retry action has already been submitted and we are currently doing
            it
        '404':
          description: Parent resource(s) not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '409':
          description: >-
            Retry action has been accepted but cannot be processed due to
            current state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: distributionRequestId
          description: Id of parent DistributionRequest
          required: true
          schema:
            type: string
components:
  parameters: {}
  schemas:
    DistributionRequestInput:
      type: object
      properties:
        destinationEndpointId:
          description: >-
            Reference to a destination's endpoints to be used for distributing
            the data
          items:
            type: integer
            format: int32
          minItems: 2
          maxItems: 2
          type: array
        destinationEndpointProperties:
          description: >-
            A map of keys and values needed to use the selected destination
            endpoint
          type: object
          additionalProperties:
            type: string
        inputDataURL:
          description: >-
            URL of the data to be distributed. Currently, we only support files
            in GCS
          type: string
          format: url
          example: 'https://www.domain.com (url)'
        dataMappingConfigs:
          description: >-
            A destination platform might require a particular key/value data
            field to be passed as segment IDs or as different key/value
            information than is contained in the input file. An application user
            can use the mapping configuration parameters to map a given input
            data field to the output type or values required by the destination
            platform.


            For each data field that needs to be transformed, use the input
            parameters “key” and “value” to specify the key/value pair that
            should be transformed.


            To map a particular input key/value pair into a specific segment ID,
            use the “destinationSegmentID” output parameter to specify the
            required value. For example, to map a data field with the key/value
            of “gender=female” to the segment ID 'MM1234', 'Pets=Dogs' to
            segment ID 'MM5678', etc.


            To map a particular input key/value pair into different values for
            the key and value, use the “key” and “value” output parameters to
            specify the required values. For example, to map a data field with
            the key/value of “gender=female” to the key/value of 'G=F',
            'Pets=Dogs' to 'Pets in Household=Dogs'.


            Note: If you need to pass the input key/value data without any
            transformation, you still need to create entries for those keys in
            this array. For example, to pass all values of key 'country' without
            any transformation, do not set 'value' in both the input and output
            key/value parameters.


            Note: This array can only accept upto 500 entries. For requests with
            more than 500 entries, an error with status code 422 will be
            returned
          items:
            allOf:
              - $ref: '#/components/schemas/DataMappingConfig'
            type: object
          type: array
      required:
        - destinationEndpointId
        - destinationEndpointProperties
        - inputDataURL
        - dataMappingConfigs
    DistributionRequestOutput:
      type: object
      properties:
        id:
          type: string
        destinationEndpointId:
          description: >-
            Reference to a destination's endpoints to be used for distributing
            the data
          items:
            type: integer
            format: int32
          minItems: 2
          maxItems: 2
          type: array
        destinationEndpointProperties:
          description: >-
            A map of keys and values needed to use the selected destination
            endpoint
          type: object
          additionalProperties:
            type: string
        inputDataURL:
          description: >-
            URL of the data to be distributed. Currently, we only support files
            in GCS
          type: string
          format: url
          example: 'https://www.domain.com (url)'
        dataMappingConfigs:
          description: >-
            A destination platform might require a particular key/value data
            field to be passed as segment IDs or as different key/value
            information than is contained in the input file. An application user
            can use the mapping configuration parameters to map a given input
            data field to the output type or values required by the destination
            platform.


            For each data field that needs to be transformed, use the input
            parameters “key” and “value” to specify the key/value pair that
            should be transformed.


            To map a particular input key/value pair into a specific segment ID,
            use the “destinationSegmentID” output parameter to specify the
            required value. For example, to map a data field with the key/value
            of “gender=female” to the segment ID 'MM1234', 'Pets=Dogs' to
            segment ID 'MM5678', etc.


            To map a particular input key/value pair into different values for
            the key and value, use the “key” and “value” output parameters to
            specify the required values. For example, to map a data field with
            the key/value of “gender=female” to the key/value of 'G=F',
            'Pets=Dogs' to 'Pets in Household=Dogs'.


            Note: If you need to pass the input key/value data without any
            transformation, you still need to create entries for those keys in
            this array. For example, to pass all values of key 'country' without
            any transformation, do not set 'value' in both the input and output
            key/value parameters.


            Note: This array can only accept upto 500 entries. For requests with
            more than 500 entries, an error with status code 422 will be
            returned
          items:
            allOf:
              - $ref: '#/components/schemas/DataMappingConfig'
            type: object
          type: array
        createdAt:
          description: 'Datetime in UTC, formatted as ISO-8601, when the request was created'
          type: string
          format: ISO8601 UTC date-time
          example: '2019-04-13T03:35:34Z'
        status:
          description: Status of the given DistributionRequest
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          type: string
        statusUpdatedAt:
          description: >-
            Datetime in UTC, formatted as ISO-8601, when the status of the
            request last changed
          type: string
          format: ISO8601 UTC date-time
          example: '2019-04-13T03:35:34Z'
        outputMetaData:
          description: Metadata about the batch output
          allOf:
            - $ref: '#/components/schemas/BatchOutputMetadata'
          type: object
        distributionType:
          allOf:
            - $ref: '#/components/schemas/DistributionTypeEnum'
          type: string
      required:
        - id
        - destinationEndpointId
        - destinationEndpointProperties
        - inputDataURL
        - dataMappingConfigs
        - createdAt
        - status
        - statusUpdatedAt
        - distributionType
    DistributionRequestMultiResponse:
      type: object
      properties:
        distributionRequests:
          description: Array of retrieved DistributionRequests
          type: array
          items:
            $ref: '#/components/schemas/DistributionRequestOutput'
    DistributionTypeEnum:
      type: string
      enum:
        - BATCH
    SortTypeEnum:
      type: string
      enum:
        - 'createdAt:asc'
        - 'createdAt:desc'
        - 'statusUpdatedAt:asc'
        - 'statusUpdatedAt:desc'
    StatusEnum:
      type: string
      enum:
        - QUEUED
        - IN_PROGRESS
        - COMPLETED
        - FAILED
        - CANCELLED
    DataMappingConfig:
      type: object
      properties:
        input:
          allOf:
            - $ref: '#/components/schemas/InputFormat'
          type: object
        output:
          allOf:
            - $ref: '#/components/schemas/OutputFormat'
          type: object
      required:
        - input
        - output
    InputFormat:
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          inputKeyValue: '#/components/schemas/InputFormatInputKeyValue'
      required:
        - type
        - key
    InputFormatInputKeyValue:
      allOf:
        - $ref: '#/components/schemas/InputFormat'
        - type: object
          properties:
            key:
              type: integer
              format: int32
            value:
              type: integer
              format: int32
    OutputFormat:
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          outputKeyValueLabel: '#/components/schemas/OutputFormatOutputKeyValueLabel'
          outputIdLabel: '#/components/schemas/OutputFormatOutputIdLabel'
      required:
        - type
        - keyLabel
        - idLabel
    OutputFormatOutputKeyValueLabel:
      allOf:
        - $ref: '#/components/schemas/OutputFormat'
        - type: object
          properties:
            keyLabel:
              type: string
            valueLabel:
              type: string
    OutputFormatOutputIdLabel:
      allOf:
        - $ref: '#/components/schemas/OutputFormat'
        - type: object
          properties:
            idLabel:
              type: string
    BatchOutputMetadata:
      type: object
      properties:
        fileDetails:
          items:
            allOf:
              - $ref: '#/components/schemas/FileDetails'
            type: object
          type: array
        totalOutputSize:
          description: Total size of the distributed data in bytes
          type: integer
          format: int32
        totalDistributionRecords:
          description: >-
            The number of distribution records in the file initially passed to
            this endpoint's corresponding POST route. Each record corresponds to
            an end user targeted by the distribution request
          type: integer
          format: int32
      required:
        - fileDetails
        - totalOutputSize
        - totalDistributionRecords
    FileDetails:
      type: object
      properties:
        fileName:
          type: string
        lineCount:
          type: integer
          format: int32
      required:
        - fileName
        - lineCount
    StandardError:
      type: object
      properties:
        httpStatus:
          description: HTTP error status code for this problem
          type: integer
          format: int32
        errorCode:
          description: 'Service specific error code, more granular'
          type: string
        message:
          description: 'General, human readable error message'
          type: string
      required:
        - httpStatus
        - errorCode
        - message

