# generated by Reslang v0.9.0
openapi: 3.0.1
info:
  title: Distribution API
  description: New Onboarding API
  version: 0.0.1
servers:
  - url: 'https://api.liveramp.com/distribution'
tags:
  - name: Destination
    description: >-
      (configuration)  A Destination (aka DestinationCustomer) is some company
      that LiveRamp distributes data to. An example is Facebook
  - name: 'Destination::TaxonomyConfiguration'
    description: '(subresource)  '
  - name: 'Destination::Integration'
    description: >-
      (subresource)  An Integration (aka IntegrationGroup) is a particular
      configuration for sending data to a destination. It specifies the
      indentifier types, the endpoint that it is going to, and the taxonomy. An
      example is Facebook UK data store
  - name: 'Destination::Endpoint'
    description: '(subresource)  '
  - name: 'Destination::Packager'
    description: '(subresource)  '
  - name: 'Destination::Formatter'
    description: '(subresource)  '
  - name: 'Destination::Deliverer'
    description: '(subresource)  '
paths:
  /v1/destinations:
    post:
      tags:
        - Destination
      operationId: Create Destination
      description: Create a new destination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationInput'
      responses:
        '201':
          description: Destination created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: integer
      parameters: &ref_0
        - &ref_1
          in: query
          name: offset
          description: Offset of the record (starting from 0) to include in the response.
          schema:
            type: integer
            default: 0
        - &ref_2
          in: query
          name: limit
          description: >-
            Number of records to return. If unspecified, 10 records will be
            returned. Maximum value for limit can be 100
          schema:
            type: integer
            default: 10
            maximum: 100
        - &ref_3
          in: query
          name: name
          description: ''
          required: false
          schema:
            type: string
    get:
      tags:
        - Destination
      operationId: List Destinations
      description: Get all destinations
      parameters: *ref_0
      responses:
        '200':
          description: Destinations retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of records in the data set.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationMultiResponse'
  '/v1/destinations/{id}':
    get:
      tags:
        - Destination
      operationId: Get 1 Destination
      description: Retrieve a current destination
      responses:
        '200':
          description: Destination retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationOutput'
        '404':
          description: Destination not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: integer
  '/v1/destinations/{destination-id}/taxonomy-configurations':
    post:
      tags:
        - 'Destination::TaxonomyConfiguration'
      operationId: Create TaxonomyConfiguration
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationTaxonomyConfigurationInput'
      responses:
        '201':
          description: TaxonomyConfiguration created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: integer
      parameters: &ref_4
        - &ref_5
          in: path
          name: destination-id
          description: Id of parent Destination
          required: true
          schema:
            type: integer
        - &ref_6
          in: query
          name: offset
          description: Offset of the record (starting from 0) to include in the response.
          schema:
            type: integer
            default: 0
        - &ref_7
          in: query
          name: limit
          description: >-
            Number of records to return. If unspecified, 10 records will be
            returned. Maximum value for limit can be 100
          schema:
            type: integer
            default: 10
            maximum: 100
        - &ref_8
          in: query
          name: id
          description: ''
          required: false
          schema:
            type: integer
    get:
      tags:
        - 'Destination::TaxonomyConfiguration'
      operationId: 'List Destination::TaxonomyConfigurations'
      description: ''
      parameters: *ref_4
      responses:
        '200':
          description: TaxonomyConfigurations retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of records in the data set.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DestinationTaxonomyConfigurationMultiResponse
  '/v1/destinations/{destination-id}/taxonomy-configurations/{id}':
    get:
      tags:
        - 'Destination::TaxonomyConfiguration'
      operationId: 'Get 1 Destination::TaxonomyConfiguration'
      description: ''
      responses:
        '200':
          description: TaxonomyConfiguration retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationTaxonomyConfigurationOutput'
        '404': &ref_9
          description: TaxonomyConfiguration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - *ref_5
        - *ref_6
        - *ref_7
        - *ref_8
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: integer
    put:
      tags:
        - 'Destination::TaxonomyConfiguration'
      operationId: 'Modify a Destination::TaxonomyConfiguration'
      description: ''
      responses:
        '200':
          description: TaxonomyConfiguration modified successfully
        '404': *ref_9
      parameters:
        - *ref_5
        - *ref_6
        - *ref_7
        - *ref_8
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: integer
  '/v1/destinations/{destination-id}/integrations':
    post:
      tags:
        - 'Destination::Integration'
      operationId: Create Integration
      description: Create an integration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationIntegrationInput'
      responses:
        '201':
          description: Integration created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: integer
      parameters: &ref_10
        - &ref_11
          in: path
          name: destination-id
          description: Id of parent Destination
          required: true
          schema:
            type: integer
        - &ref_12
          in: query
          name: offset
          description: Offset of the record (starting from 0) to include in the response.
          schema:
            type: integer
            default: 0
        - &ref_13
          in: query
          name: limit
          description: >-
            Number of records to return. If unspecified, 10 records will be
            returned. Maximum value for limit can be 100
          schema:
            type: integer
            default: 10
            maximum: 100
        - &ref_14
          in: query
          name: name
          description: ''
          required: false
          schema:
            type: string
    get:
      tags:
        - 'Destination::Integration'
      operationId: 'List Destination::Integrations'
      description: Retrieve many integrations
      parameters: *ref_10
      responses:
        '200':
          description: Integrations retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of records in the data set.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationIntegrationMultiResponse'
  '/v1/destinations/{destination-id}/integrations/{id}':
    get:
      tags:
        - 'Destination::Integration'
      operationId: 'Get 1 Destination::Integration'
      description: Retrieve an integration
      responses:
        '200':
          description: Integration retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationIntegrationOutput'
        '404': &ref_15
          description: Integration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - *ref_11
        - *ref_12
        - *ref_13
        - *ref_14
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: integer
    put:
      tags:
        - 'Destination::Integration'
      operationId: 'Modify a Destination::Integration'
      description: Alter an integration
      responses:
        '200':
          description: Integration modified successfully
        '404': *ref_15
      parameters:
        - *ref_11
        - *ref_12
        - *ref_13
        - *ref_14
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: integer
  '/v1/destinations/{destination-id}/endpoints':
    post:
      tags:
        - 'Destination::Endpoint'
      operationId: Create Endpoint
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationEndpointInput'
      responses:
        '201':
          description: Endpoint created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: integer
      parameters: &ref_16
        - &ref_17
          in: path
          name: destination-id
          description: Id of parent Destination
          required: true
          schema:
            type: integer
        - &ref_18
          in: query
          name: offset
          description: Offset of the record (starting from 0) to include in the response.
          schema:
            type: integer
            default: 0
        - &ref_19
          in: query
          name: limit
          description: >-
            Number of records to return. If unspecified, 10 records will be
            returned. Maximum value for limit can be 100
          schema:
            type: integer
            default: 10
            maximum: 100
        - &ref_20
          in: query
          name: name
          description: ''
          required: false
          schema:
            type: string
    get:
      tags:
        - 'Destination::Endpoint'
      operationId: 'List Destination::Endpoints'
      description: ''
      parameters: *ref_16
      responses:
        '200':
          description: Endpoints retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of records in the data set.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationEndpointMultiResponse'
  '/v1/destinations/{destination-id}/endpoints/{id}':
    get:
      tags:
        - 'Destination::Endpoint'
      operationId: 'Get 1 Destination::Endpoint'
      description: ''
      responses:
        '200':
          description: Endpoint retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationEndpointOutput'
        '404': &ref_21
          description: Endpoint not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - *ref_17
        - *ref_18
        - *ref_19
        - *ref_20
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: integer
    put:
      tags:
        - 'Destination::Endpoint'
      operationId: 'Modify a Destination::Endpoint'
      description: ''
      responses:
        '200':
          description: Endpoint modified successfully
        '404': *ref_21
      parameters:
        - *ref_17
        - *ref_18
        - *ref_19
        - *ref_20
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: integer
  '/v1/destinations/{destination-id}/packagers':
    post:
      tags:
        - 'Destination::Packager'
      operationId: Create Packager
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationPackagerInput'
      responses:
        '201':
          description: Packager created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: integer
      parameters: &ref_22
        - &ref_23
          in: path
          name: destination-id
          description: Id of parent Destination
          required: true
          schema:
            type: integer
        - &ref_24
          in: query
          name: offset
          description: Offset of the record (starting from 0) to include in the response.
          schema:
            type: integer
            default: 0
        - &ref_25
          in: query
          name: limit
          description: >-
            Number of records to return. If unspecified, 10 records will be
            returned. Maximum value for limit can be 100
          schema:
            type: integer
            default: 10
            maximum: 100
    get:
      tags:
        - 'Destination::Packager'
      operationId: 'List Destination::Packagers'
      description: ''
      parameters: *ref_22
      responses:
        '200':
          description: Packagers retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of records in the data set.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationPackagerMultiResponse'
  '/v1/destinations/{destination-id}/packagers/{id}':
    get:
      tags:
        - 'Destination::Packager'
      operationId: 'Get 1 Destination::Packager'
      description: ''
      responses:
        '200':
          description: Packager retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationPackagerOutput'
        '404':
          description: Packager not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - *ref_23
        - *ref_24
        - *ref_25
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: integer
  '/v1/destinations/{destination-id}/formatters':
    post:
      tags:
        - 'Destination::Formatter'
      operationId: Create Formatter
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationFormatterInput'
      responses:
        '201':
          description: Formatter created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: integer
      parameters: &ref_26
        - &ref_27
          in: path
          name: destination-id
          description: Id of parent Destination
          required: true
          schema:
            type: integer
        - &ref_28
          in: query
          name: offset
          description: Offset of the record (starting from 0) to include in the response.
          schema:
            type: integer
            default: 0
        - &ref_29
          in: query
          name: limit
          description: >-
            Number of records to return. If unspecified, 10 records will be
            returned. Maximum value for limit can be 100
          schema:
            type: integer
            default: 10
            maximum: 100
    get:
      tags:
        - 'Destination::Formatter'
      operationId: 'List Destination::Formatters'
      description: ''
      parameters: *ref_26
      responses:
        '200':
          description: Formatters retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of records in the data set.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationFormatterMultiResponse'
  '/v1/destinations/{destination-id}/formatters/{id}':
    get:
      tags:
        - 'Destination::Formatter'
      operationId: 'Get 1 Destination::Formatter'
      description: ''
      responses:
        '200':
          description: Formatter retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationFormatterOutput'
        '404':
          description: Formatter not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - *ref_27
        - *ref_28
        - *ref_29
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: integer
  '/v1/destinations/{destination-id}/deliverers':
    post:
      tags:
        - 'Destination::Deliverer'
      operationId: Create Deliverer
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DestinationDelivererInput'
      responses:
        '201':
          description: Deliverer created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: integer
      parameters: &ref_30
        - &ref_31
          in: path
          name: destination-id
          description: Id of parent Destination
          required: true
          schema:
            type: integer
        - &ref_32
          in: query
          name: offset
          description: Offset of the record (starting from 0) to include in the response.
          schema:
            type: integer
            default: 0
        - &ref_33
          in: query
          name: limit
          description: >-
            Number of records to return. If unspecified, 10 records will be
            returned. Maximum value for limit can be 100
          schema:
            type: integer
            default: 10
            maximum: 100
    get:
      tags:
        - 'Destination::Deliverer'
      operationId: 'List Destination::Deliverers'
      description: ''
      parameters: *ref_30
      responses:
        '200':
          description: Deliverers retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of records in the data set.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDelivererMultiResponse'
  '/v1/destinations/{destination-id}/deliverers/{id}':
    get:
      tags:
        - 'Destination::Deliverer'
      operationId: 'Get 1 Destination::Deliverer'
      description: ''
      responses:
        '200':
          description: Deliverer retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationDelivererOutput'
        '404':
          description: Deliverer not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - *ref_31
        - *ref_32
        - *ref_33
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: integer
components:
  parameters: {}
  schemas:
    DestinationInput:
      type: object
      properties:
        name:
          description: ''
          type: string
      required:
        - name
    DestinationOutput:
      type: object
      properties:
        id:
          description: ''
          type: integer
        name:
          description: ''
          type: string
      required:
        - id
        - name
    DestinationMultiResponse:
      type: object
      properties:
        destinations:
          description: Array of retrieved Destinations
          type: array
          items:
            $ref: '#/components/schemas/DestinationOutput'
    DestinationTaxonomyConfigurationInput:
      type: object
      properties:
        name:
          description: ''
          type: string
        mappingsMacro:
          description: ''
          type: string
      required:
        - name
        - mappingsMacro
    DestinationTaxonomyConfigurationOutput:
      type: object
      properties:
        id:
          description: ''
          type: integer
        name:
          description: ''
          type: string
        mappingsMacro:
          description: ''
          type: string
      required:
        - id
        - name
        - mappingsMacro
    DestinationTaxonomyConfigurationMultiResponse:
      type: object
      properties:
        taxonomyConfigurations:
          description: 'Array of retrieved Destination::TaxonomyConfigurations'
          type: array
          items:
            $ref: '#/components/schemas/DestinationTaxonomyConfigurationOutput'
    DestinationIntegrationInput:
      type: object
      properties:
        name:
          description: ''
          type: string
        mapping:
          description: ''
          items:
            $ref: '#/components/schemas/IdentifierTypeMapping'
          type: array
        taxonomyConfigurationId:
          description: ''
          type: integer
          example: 'Link to a Destination::TaxonomyConfiguration resource via its id'
      required:
        - name
        - mapping
        - taxonomyConfigurationId
    DestinationIntegrationOutput:
      type: object
      properties:
        id:
          description: ''
          type: integer
        name:
          description: ''
          type: string
        mapping:
          description: ''
          items:
            $ref: '#/components/schemas/IdentifierTypeMapping'
          type: array
        taxonomyConfigurationId:
          description: ''
          type: integer
          example: 'Link to a Destination::TaxonomyConfiguration resource via its id'
      required:
        - id
        - name
        - mapping
        - taxonomyConfigurationId
    DestinationIntegrationMultiResponse:
      type: object
      properties:
        integrations:
          description: 'Array of retrieved Destination::Integrations'
          type: array
          items:
            $ref: '#/components/schemas/DestinationIntegrationOutput'
    IdentifierTypeMapping:
      type: object
      properties:
        identifierPoolId:
          description: ''
          type: string
          example: >-
            Link to a IdentifierPool (to be defined in the future) resource via
            its id
        endpointId:
          description: ''
          type: integer
          example: 'Link to a Destination::Endpoint resource via its id'
      required:
        - identifierPoolId
        - endpointId
    DestinationEndpointInput:
      type: object
      properties:
        name:
          description: ''
          type: string
        url:
          description: ''
          type: string
        packagerId:
          description: ''
          type: integer
          example: 'Link to a Destination::Packager resource via its id'
        formatterId:
          description: ''
          type: integer
          example: 'Link to a Destination::Formatter resource via its id'
        delivererId:
          description: ''
          type: integer
          example: 'Link to a Destination::Deliverer resource via its id'
        endpointProperties:
          description: ''
          items:
            $ref: '#/components/schemas/EndpointProperty'
          type: array
      required:
        - name
        - url
        - packagerId
        - formatterId
        - delivererId
        - endpointProperties
    DestinationEndpointOutput:
      type: object
      properties:
        id:
          description: ''
          type: integer
        name:
          description: ''
          type: string
        url:
          description: ''
          type: string
        packagerId:
          description: ''
          type: integer
          example: 'Link to a Destination::Packager resource via its id'
        formatterId:
          description: ''
          type: integer
          example: 'Link to a Destination::Formatter resource via its id'
        delivererId:
          description: ''
          type: integer
          example: 'Link to a Destination::Deliverer resource via its id'
        endpointProperties:
          description: ''
          items:
            $ref: '#/components/schemas/EndpointProperty'
          type: array
      required:
        - id
        - name
        - url
        - packagerId
        - formatterId
        - delivererId
        - endpointProperties
    DestinationEndpointMultiResponse:
      type: object
      properties:
        endpoints:
          description: 'Array of retrieved Destination::Endpoints'
          type: array
          items:
            $ref: '#/components/schemas/DestinationEndpointOutput'
    EndpointProperty:
      type: object
      properties:
        name:
          description: ''
          type: string
        default:
          description: ''
          type: string
        externallyConfigurable:
          description: ''
          type: boolean
      required:
        - name
        - default
        - externallyConfigurable
    DestinationPackagerInput:
      type: object
      properties:
        macro:
          description: ''
          type: string
        compressionType:
          description: ''
          type: string
          enum: &ref_34
            - NONE
            - BZ2
            - GZIP
            - LZO
      required:
        - macro
        - compressionType
    DestinationPackagerOutput:
      type: object
      properties:
        id:
          description: ''
          type: integer
        macro:
          description: ''
          type: string
        compressionType:
          description: ''
          type: string
          enum: *ref_34
      required:
        - id
        - macro
        - compressionType
    DestinationPackagerMultiResponse:
      type: object
      properties:
        packagers:
          description: 'Array of retrieved Destination::Packagers'
          type: array
          items:
            $ref: '#/components/schemas/DestinationPackagerOutput'
    DestinationFormatterInput:
      type: object
      properties:
        macro:
          description: ''
          type: string
      required:
        - macro
    DestinationFormatterOutput:
      type: object
      properties:
        id:
          description: ''
          type: integer
        macro:
          description: ''
          type: string
      required:
        - id
        - macro
    DestinationFormatterMultiResponse:
      type: object
      properties:
        formatters:
          description: 'Array of retrieved Destination::Formatters'
          type: array
          items:
            $ref: '#/components/schemas/DestinationFormatterOutput'
    DestinationDelivererInput:
      type: object
      properties:
        protocol:
          description: ''
          type: string
          enum: &ref_35
            - SFTP
            - FTP
            - FTPS_EXPLICIT
            - S3
            - FS_COPY
            - APP_NEXUS
            - NO_OP
            - FTPS_IMPLICIT
            - IRON_BOX
            - YAHOO
            - ACXIOM_FULFILLMENT
            - FACEBOOK
            - LINKEDIN
            - GOOGLE
            - KBM
            - PINTEREST
            - GOOGLE_CUSTOMER_MATCH
            - LR_FULFILLMENT
            - SNAPCHAT
            - BIGQUERY
            - GOOGLE_STORE_TRANSACTIONS
            - AZURE
        macro:
          description: ''
          type: string
      required:
        - protocol
        - macro
    DestinationDelivererOutput:
      type: object
      properties:
        id:
          description: ''
          type: integer
        protocol:
          description: ''
          type: string
          enum: *ref_35
        macro:
          description: ''
          type: string
      required:
        - id
        - protocol
        - macro
    DestinationDelivererMultiResponse:
      type: object
      properties:
        deliverers:
          description: 'Array of retrieved Destination::Deliverers'
          type: array
          items:
            $ref: '#/components/schemas/DestinationDelivererOutput'
    StandardError:
      type: object
      properties:
        httpStatus:
          description: HTTP error status code for this problem
          type: integer
        errorCode:
          description: 'Service specific error code, more granular'
          type: string
        message:
          description: 'General, human readable error message'
          type: string
      required:
        - httpStatus
        - errorCode
        - message

