openapi: 3.0.1
info:
  title: Authorization API
  description: This is the authorization API for LiveRamp's Platform
  version: 0.0.1
servers:
  - description: ''
    url: 'https://api.liveramp.com/authorization'
tags:
  - name: User
    description: '(resource)  '
  - name: Suspend User
    description: '(sync action)  '
  - name: Unsuspend User
    description: '(sync action)  '
  - name: Organization
    description: '(resource)  '
  - name: Role
    description: '(resource)  '
paths:
  /v1/users:
    post:
      tags:
        - User
      operationId: Create User
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
      parameters:
        - description: 'for your access token, ya know?'
          in: header
          name: Authorization
          required: true
          schema:
            type: string
        - description: 'for your org ID, ya know?'
          in: header
          name: LR-Org-ID
          required: true
          schema:
            type: string
    get:
      tags:
        - User
      operationId: Get Users
      description: ''
      responses:
        '200':
          description: Users retrieved successfully
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMultiResponse'
      parameters:
        - in: query
          name: limit
          description: Number of Users to return
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
            maximum: 100
        - in: query
          name: after
          description: >-
            This value is a cursor that enables continued paginated searches.
            Its value can be found under "_pagination.after" in the previous
            response from this endpoint.
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: parent
          required: false
          schema:
            type: integer
            format: int32
            description: Link to Organization resource via its id
        - description: 'for your access token, ya know?'
          in: header
          name: Authorization
          required: true
          schema:
            type: string
  '/v1/users/{id}':
    get:
      tags:
        - User
      operationId: Get User
      description: ''
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutput'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: 'for your access token, ya know?'
          in: header
          name: Authorization
          required: true
          schema:
            type: string
  '/v1/users/{userId}/actions/suspend':
    post:
      tags:
        - Suspend User
      operationId: Suspend User
      description: ''
      responses:
        '200':
          description: Suspend action completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
        '404':
          description: Parent resource(s) not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: userId
          description: Id of parent User
          required: true
          schema:
            type: integer
            format: int32
  '/v1/users/{userId}/actions/unsuspend':
    post:
      tags:
        - Unsuspend User
      operationId: Unsuspend User
      description: ''
      responses:
        '200':
          description: Unsuspend action completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
        '404':
          description: Parent resource(s) not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: userId
          description: Id of parent User
          required: true
          schema:
            type: integer
            format: int32
        - description: 'for your access token, ya know?'
          in: header
          name: Authorization
          required: true
          schema:
            type: string
        - description: 'for your org ID, ya know?'
          in: header
          name: LR-Org-ID
          required: true
          schema:
            type: string
  /v1/organizations:
    post:
      tags:
        - Organization
      operationId: Create Organization
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInput'
      responses:
        '201':
          description: Organization created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
    get:
      tags:
        - Organization
      operationId: Get Organizations
      description: ''
      responses:
        '200':
          description: Organizations retrieved successfully
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMultiResponse'
      parameters:
        - in: query
          name: limit
          description: Number of Organizations to return
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
            maximum: 100
        - in: query
          name: after
          description: >-
            This value is a cursor that enables continued paginated searches.
            Its value can be found under "_pagination.after" in the previous
            response from this endpoint.
          schema:
            type: string
  '/v1/organizations/{id}':
    get:
      tags:
        - Organization
      operationId: Get Organization
      description: ''
      responses:
        '200':
          description: Organization retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationOutput'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
  /v1/roles:
    post:
      tags:
        - Role
      operationId: Create Role
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleInput'
      responses:
        '201':
          description: Role created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
      parameters:
        - description: 'for your access token, ya know?'
          in: header
          name: Authorization
          required: true
          schema:
            type: string
        - description: 'for your org ID, ya know?'
          in: header
          name: LR-Org-ID
          required: true
          schema:
            type: string
    get:
      tags:
        - Role
      operationId: Get Roles
      description: ''
      responses:
        '200':
          description: Roles retrieved successfully
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMultiResponse'
      parameters:
        - in: query
          name: limit
          description: Number of Roles to return
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
            maximum: 100
        - in: query
          name: after
          description: >-
            This value is a cursor that enables continued paginated searches.
            Its value can be found under "_pagination.after" in the previous
            response from this endpoint.
          schema:
            type: string
        - description: 'for your access token, ya know?'
          in: header
          name: Authorization
          required: true
          schema:
            type: string
  '/v1/roles/{id}':
    get:
      tags:
        - Role
      operationId: Get Role
      description: ''
      responses:
        '200':
          description: Role retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleOutput'
        '404':
          description: Role not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: 'for your access token, ya know?'
          in: header
          name: Authorization
          required: true
          schema:
            type: string
components:
  parameters: {}
  schemas:
    UserInput:
      type: object
      properties:
        name:
          type: string
        parent:
          type: integer
          format: int32
          description: Link to Organization resource via its id
        roles:
          description: Link to Role resources via their ids
          items:
            type: integer
            format: int32
          minItems: 1
          maxItems: 10
          type: array
        createdAt:
          type: string
          format: date-time
          example: '2006-01-02T15:04:05Z'
      required:
        - name
        - parent
        - roles
        - createdAt
    UserOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        parent:
          type: integer
          format: int32
          description: Link to Organization resource via its id
        roles:
          description: Link to Role resources via their ids
          items:
            type: integer
            format: int32
          minItems: 1
          maxItems: 10
          type: array
        createdAt:
          type: string
          format: date-time
          example: '2006-01-02T15:04:05Z'
      required:
        - id
        - name
        - parent
        - roles
        - createdAt
    UserMultiResponse:
      type: object
      properties:
        users:
          description: Array of retrieved Users
          type: array
          items:
            $ref: '#/components/schemas/UserOutput'
        _pagination:
          $ref: '#/components/schemas/UserMultiResponsePagination'
    OrganizationInput:
      type: object
      properties:
        name:
          type: string
        parentOrganizationId:
          type: integer
          format: int32
          description: Link to Organization resource via its id
      required:
        - name
    OrganizationOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        parentOrganizationId:
          type: integer
          format: int32
          description: Link to Organization resource via its id
      required:
        - id
        - name
    OrganizationMultiResponse:
      type: object
      properties:
        organizations:
          description: Array of retrieved Organizations
          type: array
          items:
            $ref: '#/components/schemas/OrganizationOutput'
        _pagination:
          $ref: '#/components/schemas/OrganizationMultiResponsePagination'
    RoleInput:
      type: object
      properties:
        name:
          type: string
        parentRoleId:
          type: integer
          format: int32
          description: Link to Role resource via its id
      required:
        - name
        - parentRoleId
    RoleOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        parentRoleId:
          type: integer
          format: int32
          description: Link to Role resource via its id
      required:
        - id
        - name
        - parentRoleId
    RoleMultiResponse:
      type: object
      properties:
        roles:
          description: Array of retrieved Roles
          type: array
          items:
            $ref: '#/components/schemas/RoleOutput'
        _pagination:
          $ref: '#/components/schemas/RoleMultiResponsePagination'
    StandardError:
      type: object
      properties:
        httpStatus:
          description: HTTP error status code for this problem
          type: integer
          format: int32
        errorCode:
          description: 'Service specific error code, more granular'
          type: string
        message:
          description: 'General, human readable error message'
          type: string
      required:
        - httpStatus
        - errorCode
        - message
    UserMultiResponsePagination:
      type: object
      properties:
        after:
          type: string
          nullable: true
          description: >-
            This field is a cursor to be passed as a query parameter in
            subsequent, paginated searches.

            It allows the next request to begin from where the current search
            left off.

            When "after" is  null, there are no more records to fetch for this
            search.
    OrganizationMultiResponsePagination:
      type: object
      properties:
        after:
          type: string
          nullable: true
          description: >-
            This field is a cursor to be passed as a query parameter in
            subsequent, paginated searches.

            It allows the next request to begin from where the current search
            left off.

            When "after" is  null, there are no more records to fetch for this
            search.
    RoleMultiResponsePagination:
      type: object
      properties:
        after:
          type: string
          nullable: true
          description: >-
            This field is a cursor to be passed as a query parameter in
            subsequent, paginated searches.

            It allows the next request to begin from where the current search
            left off.

            When "after" is  null, there are no more records to fetch for this
            search.

