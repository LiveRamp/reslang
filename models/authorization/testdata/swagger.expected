openapi: 3.0.1
info:
  title: Authorization API
  description: This is the authorization API for LiveRamp's Platform
  version: 0.0.1
servers:
  - description: ''
    url: 'https://api.liveramp.com/authorization'
tags:
  - name: User
    description: '(resource)  '
  - name: Suspend User
    description: '(sync action)  '
  - name: Unsuspend User
    description: '(sync action)  '
  - name: Organization
    description: '(resource)  '
  - name: Role
    description: '(resource)  '
paths:
  /v1/users:
    post:
      tags:
        - User
      operationId: Create User
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
    get:
      tags:
        - User
      operationId: Get Users
      description: ''
      responses:
        '200':
          description: Users retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of Users returned by the query
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMultiResponse'
      parameters:
        - in: query
          name: offset
          description: Offset of the Users (starting from 0) to include in the response.
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
        - in: query
          name: limit
          description: Number of Users to return
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
            maximum: 100
        - in: query
          name: name
          required: false
          schema:
            type: string
        - in: query
          name: parent
          required: false
          schema:
            type: integer
            format: int32
            description: Link to Organization resource via its id
  '/v1/users/{id}':
    get:
      tags:
        - User
      operationId: Get User
      description: ''
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutput'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
  '/v1/users/{userId}/actions/suspend':
    post:
      tags:
        - Suspend User
      operationId: Suspend User
      description: ''
      responses:
        '200':
          description: Suspend action completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
        '404':
          description: Parent resource(s) not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: userId
          description: Id of parent User
          required: true
          schema:
            type: integer
            format: int32
  '/v1/users/{userId}/actions/unsuspend':
    post:
      tags:
        - Unsuspend User
      operationId: Unsuspend User
      description: ''
      responses:
        '200':
          description: Unsuspend action completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
        '404':
          description: Parent resource(s) not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: userId
          description: Id of parent User
          required: true
          schema:
            type: integer
            format: int32
  /v1/organizations:
    post:
      tags:
        - Organization
      operationId: Create Organization
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationInput'
      responses:
        '201':
          description: Organization created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
    get:
      tags:
        - Organization
      operationId: Get Organizations
      description: ''
      responses:
        '200':
          description: Organizations retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of Organizations returned by the query
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationMultiResponse'
      parameters:
        - in: query
          name: offset
          description: >-
            Offset of the Organizations (starting from 0) to include in the
            response.
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
        - in: query
          name: limit
          description: Number of Organizations to return
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
            maximum: 100
  '/v1/organizations/{id}':
    get:
      tags:
        - Organization
      operationId: Get Organization
      description: ''
      responses:
        '200':
          description: Organization retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationOutput'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
  /v1/roles:
    post:
      tags:
        - Role
      operationId: Create Role
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleInput'
      responses:
        '201':
          description: Role created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
    get:
      tags:
        - Role
      operationId: Get Roles
      description: ''
      responses:
        '200':
          description: Roles retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of Roles returned by the query
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleMultiResponse'
      parameters:
        - in: query
          name: offset
          description: Offset of the Roles (starting from 0) to include in the response.
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
        - in: query
          name: limit
          description: Number of Roles to return
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
            maximum: 100
  '/v1/roles/{id}':
    get:
      tags:
        - Role
      operationId: Get Role
      description: ''
      responses:
        '200':
          description: Role retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleOutput'
        '404':
          description: Role not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
components:
  parameters: {}
  schemas:
    UserInput:
      type: object
      properties:
        name:
          type: string
        parent:
          type: integer
          format: int32
          description: Link to Organization resource via its id
        roles:
          description: Link to Role resources via their ids
          items:
            type: integer
            format: int32
          minItems: 1
          maxItems: 10
          type: array
      required:
        - name
        - parent
        - roles
    UserOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        parent:
          type: integer
          format: int32
          description: Link to Organization resource via its id
        roles:
          description: Link to Role resources via their ids
          items:
            type: integer
            format: int32
          minItems: 1
          maxItems: 10
          type: array
      required:
        - id
        - name
        - parent
        - roles
    UserMultiResponse:
      type: object
      properties:
        users:
          description: Array of retrieved Users
          type: array
          items:
            $ref: '#/components/schemas/UserOutput'
    OrganizationInput:
      type: object
      properties:
        name:
          type: string
        parentOrganizationId:
          type: integer
          format: int32
          description: Link to Organization resource via its id
      required:
        - name
    OrganizationOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        parentOrganizationId:
          type: integer
          format: int32
          description: Link to Organization resource via its id
      required:
        - id
        - name
    OrganizationMultiResponse:
      type: object
      properties:
        organizations:
          description: Array of retrieved Organizations
          type: array
          items:
            $ref: '#/components/schemas/OrganizationOutput'
    RoleInput:
      type: object
      properties:
        name:
          type: string
        parentRoleId:
          type: integer
          format: int32
          description: Link to Role resource via its id
      required:
        - name
        - parentRoleId
    RoleOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        parentRoleId:
          type: integer
          format: int32
          description: Link to Role resource via its id
      required:
        - id
        - name
        - parentRoleId
    RoleMultiResponse:
      type: object
      properties:
        roles:
          description: Array of retrieved Roles
          type: array
          items:
            $ref: '#/components/schemas/RoleOutput'
    StandardError:
      type: object
      properties:
        httpStatus:
          description: HTTP error status code for this problem
          type: integer
          format: int32
        errorCode:
          description: 'Service specific error code, more granular'
          type: string
        message:
          description: 'General, human readable error message'
          type: string
      required:
        - httpStatus
        - errorCode
        - message

