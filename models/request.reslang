"Requests model async workflows"
version 0.0.1

request UploadRequest {
    id: int
    name: string
    status: UploadRequestStatusEnum
    client: string

	operations
		POST GET MULTIGET id name
}

singleton subresource UploadRequest::Status {
    id: int
    recordsProcessed: int
    completed: boolean

    operations
        GET
}

subresource UploadRequest::RecordSet {
    id: int
    company: string
    records: Record[]

    operations 
        GET POST
}

structure Record {
    details: string
    address: string
}

action UploadRequest::StartProcessingVerb  {
    operations
        POST
}

action UploadRequest::StopProcessingVerb {
    id: int
    when: datetime

    operations
        POST GET
}

enum UploadRequestStatusEnum {
    STARTED
    STOPPED
    COMPLETED
}