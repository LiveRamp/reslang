/* requests model async workflows */
version 0.0.1

request Car {
    id: int
    name: string
    status: UploadRequestStatusEnum
    client: string

	operations
		POST GET MULTIGET id name
}

singleton subresource Status of Car {
    recordsProcessed: int
    completed: boolean

    operations
        GET
}

verb StartProcessingVerb of Car {
    operations
        POST
}

verb StopProcessingVerb of Car {
    id: int
    when: datetime

    operations
        POST GET
}

subresource RecordSet of Car {
    id: int;
    company: string;
    records: Record[]

    operations 
        GET POST
}

structure Record {
    details: string
    address: string
}

enum UploadRequestStatusEnum {
    STARTED
    STOPPED
    COMPLETED
}