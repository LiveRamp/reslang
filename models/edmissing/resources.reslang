
request-resource DistributionRequest {
    id: string

      "Reference to a destination's endpoints to be used for distributing the data"
    destinationEndpointId: string
      "A map of keys and values needed to use the selected destination endpoint"
    destinationEndpointProperties: stringmap<string>
      "URL of the data to be distributed. Currently, we only support files in GCS"
    inputDataURL: url
      "Mapping configs required for a given platform"
    dataMappingConfigs: DataMappingConfig[]
      "Datetime in UTC, formatted as ISO-8601, when the request was created"
    createdAt: datetime output
      "Status of the given DistributionRequest"
    status: DistributionRequestStatusEnum output
      "Datetime in UTC, formatted as ISO-8601, when the status of the request last changed"
    statusUpdatedAt: datetime output
      "Metadata about the batch output"
    outputMetaData: OutputMetadata output optional  
    distributionType: DistributionTypeEnum output

    // query only params
      "Returns a list of ids of DistributionRequests belonging to this SSA, limited to the 50 most recent requests, in reverse chronological order."
    legacySsaId: long queryonly

    /operations
          "Get a request"
        GET
          "Use this endpoint to create a new DistributionRequest"
        POST
          "Use this endpoint to find existing DistributionRequests."
        MULTIGET
}

enum DistributionTypeEnum {
    BATCH
}

enum SortTypeEnum {
    createdAt:asc
    createdAt:desc
    statusUpdatedAt:asc
    statusUpdatedAt:desc
}

enum DistributionRequestStatusEnum {
    QUEUED
    IN_PROGRESS
    COMPLETED
    FAILED
    CANCELLED
}

structure DataMappingConfig {
    input: InputFormat;
    output: OutputFormat
}

union InputFormat {
    inputKeyValue: InputKeyValue
}

structure InputKeyValue {
    key: int
    value: int optional
}

union OutputFormat {
    outputKeyValueLabel: OutputKeyValueLabel
    outputIdLabel: OutputIdLabel
}

structure OutputKeyValueLabel {
    keyLabel: string
    valueLabel: string optional
}

structure OutputIdLabel {
    idLabel: string
}

structure BatchOutputMetadata {
    fileDetails: FileDetails[]
      "Total size of the distributed data in bytes"
    totalOutputSize: int
    
      "The number of distribution records in the file initially."
    totalDistributionRecords: int
}

structure FileDetails {
    fileName: string
    lineCount: int
}

structure StreamingOutputMetadata {
    distributionStartedAt: datetime
    distributionFinishedAt: datetime
      "The number of distribution records in the file initially."
    totalDistributionRecords: int
}

union OutputMetadata {
  batch: BatchOutputMetadata
  streaming: StreamingOutputMetadata
}

/**
  future resources, for linking
  */

future configuration-resource Destination {
    id: int
}

future subresource Destination::Endpoint {
    id: int
} 