# generated by Reslang v0.9.9
openapi: 3.0.1
info:
  title: API for modeling directories and files
  description: This is a simple API for manipulating files
  version: 1.0.0
servers:
  - url: 'https://api.liveramp.com/file'
tags:
  - name: Directory
    description: (asset)  This models a directory we might create
  - name: FileType
    description: '(configuration)  This configures up a file type, e.g. .gif'
  - name: 'Directory::File'
    description: (subresource)  This models a file in a directory
  - name: DirectoryDeleteRequest
    description: (request)  This models a long running request
  - name: 'DirectoryDeleteRequest::Cancel'
    description: (sync action)  This models an action on a request
paths:
  /v1/directories:
    post:
      tags:
        - Directory
      operationId: Create Directory
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryInput'
      responses:
        '201':
          description: Directory created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: string
      parameters: &ref_0
        - &ref_1
          in: query
          name: offset
          description: Offset of the record (starting from 0) to include in the response.
          schema:
            type: integer
            default: 0
        - &ref_2
          in: query
          name: limit
          description: >-
            Number of records to return. If unspecified, 10 records will be
            returned. Maximum value for limit can be 100
          schema:
            type: integer
            default: 10
            maximum: 100
        - &ref_3
          in: query
          name: id
          description: ''
          required: false
          schema:
            type: string
        - &ref_4
          in: query
          name: name
          description: ''
          required: false
          schema:
            type: string
    get:
      tags:
        - Directory
      operationId: List Directories
      description: ''
      parameters: *ref_0
      responses:
        '200':
          description: Directories retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of records in the data set.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryMultiResponse'
  '/v1/directories/{id}':
    get:
      tags:
        - Directory
      operationId: Get 1 Directory
      description: ''
      responses:
        '200':
          description: Directory retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryOutput'
        '404':
          description: Directory not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_4
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: string
  /v1/file-types:
    post:
      tags:
        - FileType
      operationId: Create FileType
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileTypeInput'
      responses:
        '201':
          description: FileType created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: string
      parameters: &ref_5
        - &ref_6
          in: query
          name: offset
          description: Offset of the record (starting from 0) to include in the response.
          schema:
            type: integer
            default: 0
        - &ref_7
          in: query
          name: limit
          description: >-
            Number of records to return. If unspecified, 10 records will be
            returned. Maximum value for limit can be 100
          schema:
            type: integer
            default: 10
            maximum: 100
        - &ref_8
          in: query
          name: type
          description: ''
          required: false
          schema:
            type: string
    get:
      tags:
        - FileType
      operationId: List FileTypes
      description: ''
      parameters: *ref_5
      responses:
        '200':
          description: FileTypes retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of records in the data set.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTypeMultiResponse'
  '/v1/file-types/{id}':
    get:
      tags:
        - FileType
      operationId: Get 1 FileType
      description: Get a FileType
      responses:
        '200':
          description: FileType retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTypeOutput'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialError'
        '404':
          description: Cannot find file type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
        '405':
          description: Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - *ref_6
        - *ref_7
        - *ref_8
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: string
  '/v1/directories/{directory-id}/files':
    post:
      tags:
        - 'Directory::File'
      operationId: Create File
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryFileInput'
      responses:
        '201':
          description: File created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: integer
      parameters: &ref_9
        - &ref_10
          in: path
          name: directory-id
          description: Id of parent Directory
          required: true
          schema:
            type: string
        - &ref_11
          in: query
          name: offset
          description: Offset of the record (starting from 0) to include in the response.
          schema:
            type: integer
            default: 0
        - &ref_12
          in: query
          name: limit
          description: >-
            Number of records to return. If unspecified, 10 records will be
            returned. Maximum value for limit can be 100
          schema:
            type: integer
            default: 10
            maximum: 100
        - &ref_13
          in: query
          name: contents
          description: ''
          required: false
          schema:
            type: string
    get:
      tags:
        - 'Directory::File'
      operationId: 'List Directory::Files'
      description: ''
      parameters: *ref_9
      responses:
        '200':
          description: Files retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of records in the data set.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryFileMultiResponse'
  '/v1/directories/{directory-id}/files/{id}':
    get:
      tags:
        - 'Directory::File'
      operationId: 'Get 1 Directory::File'
      description: ''
      responses:
        '200':
          description: File retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryFileOutput'
        '404':
          description: File not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - *ref_10
        - *ref_11
        - *ref_12
        - *ref_13
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: integer
  /v1/directory-delete-requests:
    post:
      tags:
        - DirectoryDeleteRequest
      operationId: Create DirectoryDeleteRequest
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryDeleteRequestInput'
      responses:
        '201':
          description: DirectoryDeleteRequest created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: integer
      parameters: &ref_14
        - &ref_15
          in: query
          name: offset
          description: Offset of the record (starting from 0) to include in the response.
          schema:
            type: integer
            default: 0
        - &ref_16
          in: query
          name: limit
          description: >-
            Number of records to return. If unspecified, 10 records will be
            returned. Maximum value for limit can be 100
          schema:
            type: integer
            default: 10
            maximum: 100
        - &ref_17
          in: query
          name: id
          description: ''
          required: false
          schema:
            type: integer
    get:
      tags:
        - DirectoryDeleteRequest
      operationId: List DirectoryDeleteRequests
      description: ''
      parameters: *ref_14
      responses:
        '200':
          description: DirectoryDeleteRequests retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of records in the data set.
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDeleteRequestMultiResponse'
  '/v1/directory-delete-requests/{id}':
    get:
      tags:
        - DirectoryDeleteRequest
      operationId: Get 1 DirectoryDeleteRequest
      description: ''
      responses:
        '200':
          description: DirectoryDeleteRequest retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDeleteRequestOutput'
        '404':
          description: DirectoryDeleteRequest not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
      parameters:
        - *ref_15
        - *ref_16
        - *ref_17
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: integer
  '/v1/directory-delete-requests/{directory-delete-request-id}/actions/cancel':
    post:
      tags:
        - 'DirectoryDeleteRequest::Cancel'
      operationId: Create Cancel
      description: ''
      responses:
        '201':
          description: Cancel action completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: integer
      parameters:
        - in: path
          name: directory-delete-request-id
          description: Id of parent DirectoryDeleteRequest
          required: true
          schema:
            type: integer
components:
  parameters: {}
  schemas:
    DirectoryInput:
      type: object
      properties:
        name:
          description: ''
          type: string
      required:
        - name
    DirectoryOutput:
      type: object
      properties:
        id:
          description: ''
          type: string
        name:
          description: ''
          type: string
      required:
        - id
        - name
    DirectoryMultiResponse:
      type: object
      properties:
        directories:
          description: Array of retrieved Directories
          type: array
          items:
            $ref: '#/components/schemas/DirectoryOutput'
    FileTypeInput:
      type: object
      properties:
        type:
          description: ''
          type: string
        format:
          description: ''
          type: string
        specId:
          description: ''
          type: string
          example: >-
            Link to a Specification (to be defined in the future) resource via
            its id
      required:
        - type
        - format
        - specId
    FileTypeOutput:
      type: object
      properties:
        id:
          description: ''
          type: string
        type:
          description: ''
          type: string
        format:
          description: ''
          type: string
        specId:
          description: ''
          type: string
          example: >-
            Link to a Specification (to be defined in the future) resource via
            its id
      required:
        - id
        - type
        - format
        - specId
    FileTypeMultiResponse:
      type: object
      properties:
        fileTypes:
          description: Array of retrieved FileTypes
          type: array
          items:
            $ref: '#/components/schemas/FileTypeOutput'
    DirectoryFileInput:
      type: object
      properties:
        name:
          description: ''
          type: string
        url:
          description: ''
          type: string
        fileTypeId:
          description: ''
          type: string
          example: Link to a FileType resource via its id
      required:
        - name
        - url
        - fileTypeId
    DirectoryFileOutput:
      type: object
      properties:
        id:
          description: ''
          type: integer
        name:
          description: ''
          type: string
        url:
          description: ''
          type: string
        fileTypeId:
          description: ''
          type: string
          example: Link to a FileType resource via its id
      required:
        - id
        - name
        - url
        - fileTypeId
    DirectoryFileMultiResponse:
      type: object
      properties:
        files:
          description: 'Array of retrieved Directory::Files'
          type: array
          items:
            $ref: '#/components/schemas/DirectoryFileOutput'
    DirectoryDeleteRequestInput:
      type: object
      properties:
        directoryId:
          description: ''
          type: string
          example: Link to a Directory resource via its id
      required:
        - directoryId
    DirectoryDeleteRequestOutput:
      type: object
      properties:
        id:
          description: ''
          type: integer
        directoryId:
          description: ''
          type: string
          example: Link to a Directory resource via its id
      required:
        - id
        - directoryId
    DirectoryDeleteRequestMultiResponse:
      type: object
      properties:
        directoryDeleteRequests:
          description: Array of retrieved DirectoryDeleteRequests
          type: array
          items:
            $ref: '#/components/schemas/DirectoryDeleteRequestOutput'
    SpecialError:
      type: object
      properties:
        message:
          description: ''
          type: string
        time:
          description: ''
          type: string
          format: ISO8601 UTC date-time
          example: '2019-04-13T03:35:34Z'
      required:
        - message
        - time
    StandardError:
      type: object
      properties:
        httpStatus:
          description: HTTP error status code for this problem
          type: integer
        errorCode:
          description: 'Service specific error code, more granular'
          type: string
        message:
          description: 'General, human readable error message'
          type: string
      required:
        - httpStatus
        - errorCode
        - message

