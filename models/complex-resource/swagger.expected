openapi: 3.0.1
info:
  title: Complex resource API
  description: This is the description of the API
  version: 0.0.1
servers:
  - url: 'https://api.liveramp.com/complex-resource'
tags:
  - name: Car
    description: (asset) this is a Car resource
  - name: Car / Wheel
    description: (subresource) A wheel is owned by a car
paths:
  /v1/cars:
    post:
      tags:
        - Car
      operationId: Create Car
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarInput'
      responses:
        '201':
          description: Car created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: number
    get:
      tags:
        - Car
      operationId: List Cars
      description: ''
      parameters:
        - in: query
          name: offset
          description: Offset of the record (starting from 0) to include in the response.
          schema:
            type: number
            default: 0
        - in: query
          name: limit
          description: >-
            Number of records to return. If unspecified, 10 records will be
            returned. Maximum value for limit can be 100
          schema:
            type: number
            default: 10
            maximum: 100
        - in: query
          name: id
          description: ''
          required: false
          schema:
            type: number
        - in: query
          name: brand
          description: ''
          required: false
          schema:
            type: string
            enum: &ref_0
              - TOYOTA
              - FORD
      responses:
        '200':
          description: Cars retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of records in the data set.
              schema:
                type: number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarMultiResponse'
  '/v1/cars/{id}':
    get:
      tags:
        - Car
      operationId: Get 1 Car
      description: ''
      responses:
        '200':
          description: Car retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarOutput'
      parameters:
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: number
  '/v1/cars/{parentId}/wheels':
    post:
      tags:
        - Car / Wheel
      operationId: Create Wheel
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car--WheelInput'
      responses:
        '201':
          description: Wheel created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    description: ''
                    type: number
      parameters:
        - in: path
          name: parentId
          description: Id of parent Car
          required: true
          schema:
            type: number
    get:
      tags:
        - Car / Wheel
      operationId: List Car--Wheels
      description: ''
      parameters:
        - in: query
          name: offset
          description: Offset of the record (starting from 0) to include in the response.
          schema:
            type: number
            default: 0
        - in: query
          name: limit
          description: >-
            Number of records to return. If unspecified, 10 records will be
            returned. Maximum value for limit can be 100
          schema:
            type: number
            default: 10
            maximum: 100
        - in: query
          name: id
          description: ''
          required: false
          schema:
            type: number
        - in: path
          name: parentId
          description: Id of parent Car
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Wheels retrieved successfully
          headers:
            X-Total-Count:
              description: Total number of records in the data set.
              schema:
                type: number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car--WheelMultiResponse'
  '/v1/cars/{parentId}/wheels/{id}':
    get:
      tags:
        - Car / Wheel
      operationId: Get 1 Car--Wheel
      description: ''
      responses:
        '200':
          description: Wheel retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car--WheelOutput'
      parameters:
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: number
        - in: path
          name: parentId
          description: Id of parent Car
          required: true
          schema:
            type: number
    put:
      tags:
        - Car / Wheel
      operationId: Modify a Car--Wheel
      description: ''
      responses:
        '200':
          description: Wheel modified successfully
      parameters:
        - in: path
          name: id
          required: true
          description: ''
          schema:
            type: number
        - in: path
          name: parentId
          description: Id of parent Car
          required: true
          schema:
            type: number
components:
  parameters: {}
  schemas:
    simple-resource-Manufacturer:
      type: object
      properties:
        company:
          description: ''
          type: string
      required:
        - company
    CarInput:
      type: object
      properties:
        brand:
          description: ''
          type: string
          enum: *ref_0
        engine:
          description: ''
          $ref: '#/components/schemas/Specification'
        components:
          description: ''
          $ref: '#/components/schemas/Specification'
        homeGarageId:
          description: ''
          type: string
          example: Link to a simple-resource-Garage  resource via its id
        manufacturer:
          description: ''
          $ref: '#/components/schemas/simple-resource-Manufacturer'
        rentedGarageIds:
          description: ''
          items:
            type: string
            example: Link to simple-resource-Garage  resource(s) via id(s)
          type: array
      required:
        - brand
        - engine
        - components
        - homeGarageId
        - manufacturer
        - rentedGarageIds
    CarOutput:
      type: object
      properties:
        id:
          description: ''
          type: number
        bought:
          description: ''
          type: string
          format: ISO8601 UTC date
          example: '2019-04-13'
        brand:
          description: ''
          type: string
          enum: *ref_0
        engine:
          description: ''
          $ref: '#/components/schemas/Specification'
        components:
          description: ''
          $ref: '#/components/schemas/Specification'
        homeGarageId:
          description: ''
          type: string
          example: Link to a simple-resource-Garage  resource via its id
        manufacturer:
          description: ''
          $ref: '#/components/schemas/simple-resource-Manufacturer'
        rentedGarageIds:
          description: ''
          items:
            type: string
            example: Link to simple-resource-Garage  resource(s) via id(s)
          type: array
      required:
        - id
        - bought
        - brand
        - engine
        - components
        - homeGarageId
        - manufacturer
        - rentedGarageIds
    CarMultiResponse:
      type: object
      properties:
        cars:
          description: Array of retrieved Cars
          type: array
          items:
            $ref: '#/components/schemas/CarOutput'
    Specification:
      type: object
      properties:
        type:
          description: ''
          type: string
        documentation:
          description: ''
          type: string
      required:
        - type
        - documentation
    Car--WheelInput:
      type: object
      properties:
        radius:
          description: ''
          type: number
      required:
        - radius
    Car--WheelOutput:
      type: object
      properties:
        id:
          description: ''
          type: number
        radius:
          description: ''
          type: number
      required:
        - id
        - radius
    Car--WheelMultiResponse:
      type: object
      properties:
        wheels:
          description: Array of retrieved Car--Wheels
          type: array
          items:
            $ref: '#/components/schemas/Car--WheelOutput'
    Error:
      description: 'Error details, only available if there was an issue in processing'
      type: object
      properties:
        httpStatusCode:
          type: number
          description: The integer HTTP error status code for this problem
        errorCode:
          type: string
          description: ' Optional, more granular error code for this problem'
        message:
          type: string
          description: Human readable error message

