asyncapi: 2.0.0
info:
  title: Data buyer API
  description: Data buyer API
  version: 0.0.1
servers:
  production:
    url: 'pubsub.liveramp.com:{port}'
    protocol: Google Cloud Pub/Sub
    description: LiveRamp Production pubsub instance
    variables:
      port:
        description: Secure connection (TLS) is available through port 8883
        default: '1883'
defaultContentType: application/json
channels:
  rest-databuyer.v1-deliver-purchased-segments:
    description: no documentation
    subscribe:
      summary: 'REST: DeliverPurchasedSegments'
      operationId: DeliverPurchasedSegments
      message:
        $ref: '#/components/messages/DeliverPurchasedSegments'
components:
  messages:
    DeliverPurchasedSegments:
      name: DeliverPurchasedSegments
      title: DeliverPurchasedSegments
      contentType: application/json
      traits:
        - $ref: '#/components/messageTraits/RestHeader'
      payload:
        $ref: '#/components/schemas/DeliverPurchasedSegmentsOutput'
  schemas:
    DeliverPurchasedSegmentsOutput:
      type: object
      properties:
        id:
          type: string
        segmentsToDelivers:
          items:
            type: string
            example: Link to Segment resource via its id
          type: array
        whereToDeliver:
          type: string
          example: Link to Destination resource via its id
        segmentStatuses:
          items:
            allOf:
              - $ref: '#/components/schemas/DeliveryStatus'
          type: array
        complete:
          type: boolean
      required:
        - id
        - segmentsToDeliver
        - whereToDeliver
        - segmentStatuses
        - complete
    DeliveryStatus:
      type: object
      properties:
        updated:
          type: string
          format: ISO8601 UTC date-time
          example: '2019-04-13T03:35:34Z'
        segment:
          type: string
          example: Link to Segment resource via its id
        status:
          allOf:
            - $ref: '#/components/schemas/DeliveryStatusEnum'
      required:
        - updated
        - segment
        - status
    DeliveryStatusEnum:
      type: string
      enum:
        - PENDING
        - DELIVERED
        - ERROR
    VerbEnum:
      type: string
      enum:
        - POST
        - PUT
        - PATCH
        - GET
        - MULTIGET
        - DELETE
  messageTraits:
    RestHeader:
      headers:
        type: object
        properties:
          verb:
            description: ''
            $ref: '#/components/schemas/VerbEnum'
          location:
            description: ''
            type: string
            format: url
            example: 'https://www.domain.com (url)'
          ids:
            description: ''
            items:
              type: string
            type: array
        required:
          - verb
          - location
          - ids

