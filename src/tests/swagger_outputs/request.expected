swagger: '2.0'
info:
  title: Simple API overview
  description: 'requests model async workflows '
  version: 0.0.1
host: liveramp.net
basePath: /request
schemes:
  - http
  - https
tags:
  - name: UploadRequest
    description: (request) undefined
  - name: UploadRequest / Status
  - name: UploadRequest / RecordSet
  - name: UploadRequest / StartProcessingVerb
  - name: UploadRequest / StopProcessingVerb
paths:
  /v1/upload-requests:
    post:
      tags:
        - UploadRequest
      operationId: createUploadRequest
      parameters:
        - in: body
          name: UploadRequestInput
          required: true
          schema:
            $ref: '#/definitions/UploadRequestInput'
      responses:
        '200':
          description: UploadRequest created successfully
        default:
          description: Error creating UploadRequest
          schema:
            $ref: '#/definitions/ErrorBody'
    get:
      tags:
        - UploadRequest
      operationId: multigetUploadRequest
      parameters:
        - in: query
          name: id
          required: false
          type: integer
          format: int32
        - in: query
          name: name
          required: false
          type: string
      responses:
        '200':
          description: UploadRequests retrieved successfully
          schema:
            $ref: '#/definitions/UploadRequestMultiResponse'
        default:
          description: Error retrieving UploadRequests
          schema:
            $ref: '#/definitions/ErrorBody'
  '/v1/upload-requests/{id}':
    get:
      tags:
        - UploadRequest
      operationId: retrieveUploadRequest
      responses:
        '200':
          description: UploadRequest retrieved successfully
          schema:
            $ref: '#/definitions/UploadRequestOutput'
        default:
          description: Error retrieving UploadRequest
          schema:
            $ref: '#/definitions/ErrorBody'
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int32
  '/v1/upload-requests/{parentId}/status':
    get:
      tags:
        - UploadRequest / Status
      operationId: retrieveStatus
      responses:
        '200':
          description: Status retrieved successfully
          schema:
            $ref: '#/definitions/StatusOutput'
        default:
          description: Error retrieving Status
          schema:
            $ref: '#/definitions/ErrorBody'
      parameters:
        - in: path
          name: parentId
          description: Id of parent UploadRequest
          required: true
          type: integer
          format: int32
  '/v1/upload-requests/{parentId}/record-sets':
    post:
      tags:
        - UploadRequest / RecordSet
      operationId: createRecordSet
      parameters:
        - in: body
          name: RecordSetInput
          required: true
          schema:
            $ref: '#/definitions/RecordSetInput'
        - in: path
          name: parentId
          description: Id of parent UploadRequest
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: RecordSet created successfully
        default:
          description: Error creating RecordSet
          schema:
            $ref: '#/definitions/ErrorBody'
  '/v1/upload-requests/{parentId}/record-sets/{id}':
    get:
      tags:
        - UploadRequest / RecordSet
      operationId: retrieveRecordSet
      responses:
        '200':
          description: RecordSet retrieved successfully
          schema:
            $ref: '#/definitions/RecordSetOutput'
        default:
          description: Error retrieving RecordSet
          schema:
            $ref: '#/definitions/ErrorBody'
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int32
        - in: path
          name: parentId
          description: Id of parent UploadRequest
          required: true
          type: integer
          format: int32
  '/v1/upload-requests/{parentId}/start-processing-verbs':
    post:
      tags:
        - UploadRequest / StartProcessingVerb
      operationId: createStartProcessingVerb
      parameters:
        - in: body
          name: StartProcessingVerbInput
          required: true
          schema:
            $ref: '#/definitions/StartProcessingVerbInput'
        - in: path
          name: parentId
          description: Id of parent UploadRequest
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: StartProcessingVerb created successfully
        default:
          description: Error creating StartProcessingVerb
          schema:
            $ref: '#/definitions/ErrorBody'
  '/v1/upload-requests/{parentId}/stop-processing-verbs':
    post:
      tags:
        - UploadRequest / StopProcessingVerb
      operationId: createStopProcessingVerb
      parameters:
        - in: body
          name: StopProcessingVerbInput
          required: true
          schema:
            $ref: '#/definitions/StopProcessingVerbInput'
        - in: path
          name: parentId
          description: Id of parent UploadRequest
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: StopProcessingVerb created successfully
        default:
          description: Error creating StopProcessingVerb
          schema:
            $ref: '#/definitions/ErrorBody'
  '/v1/upload-requests/{parentId}/stop-processing-verbs/{id}':
    get:
      tags:
        - UploadRequest / StopProcessingVerb
      operationId: retrieveStopProcessingVerb
      responses:
        '200':
          description: StopProcessingVerb retrieved successfully
          schema:
            $ref: '#/definitions/StopProcessingVerbOutput'
        default:
          description: Error retrieving StopProcessingVerb
          schema:
            $ref: '#/definitions/ErrorBody'
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          format: int32
        - in: path
          name: parentId
          description: Id of parent UploadRequest
          required: true
          type: integer
          format: int32
definitions:
  UploadRequestInput:
    type: object
    properties:
      name:
        type: string
      status:
        type: string
        enum:
          - STARTED
          - STOPPED
          - COMPLETED
      client:
        type: string
  UploadRequestOutput:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      status:
        type: string
        enum:
          - STARTED
          - STOPPED
          - COMPLETED
      client:
        type: string
  UploadRequestMultiResponse:
    type: object
    properties:
      page:
        description: 'Page offset, starting from 1'
        type: integer
        format: int32
      page-size:
        description: Size of returned page
        type: integer
        format: int32
      elements:
        description: Array of retrieved UploadRequests
        type: array
        items:
          $ref: '#/definitions/UploadRequestOutput'
  StatusOutput:
    type: object
    properties:
      id:
        type: integer
        format: int32
      recordsProcessed:
        type: integer
        format: int32
      completed:
        type: boolean
  RecordSetInput:
    type: object
    properties:
      company:
        type: string
      records:
        items:
          $ref: '#/definitions/RecordStructure'
        type: array
  RecordSetOutput:
    type: object
    properties:
      id:
        type: integer
        format: int32
      company:
        type: string
      records:
        items:
          $ref: '#/definitions/RecordStructure'
        type: array
  RecordStructure:
    type: object
    properties:
      details:
        type: string
      address:
        type: string
  StartProcessingVerbInput:
    type: object
    properties: {}
  StopProcessingVerbInput:
    type: object
    properties:
      when:
        type: string
        example: '2019-04-13T03:35:34Z (datetime)'
  StopProcessingVerbOutput:
    type: object
    properties:
      id:
        type: integer
        format: int32
      when:
        type: string
        example: '2019-04-13T03:35:34Z (datetime)'
  ErrorBody:
    type: object
    properties:
      http-status:
        type: number
        description: The integer HTTP error status code for this problem
      error-code:
        type: string
        description: 'Service specific error code, more granular'
      message:
        type: string
        description: 'General, human readable error message'
      detail:
        type: string
        description: Human readable message specific to this occurrence
      path:
        type: string
        description: The request field that the error is about

