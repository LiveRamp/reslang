openapi: 3.0.1
info:
  title: file
  description: This is a simple API for manipulating files
  version: 1.0.0
servers:
  - url: 'https://api.liveramp.com/file'
tags:
  - name: Directory
    description: This models a directory we might create
  - name: FileType
    description: 'This configures up a file type, e.g. .gif'
  - name: Directory / File
    description: This models a file in a directory
  - name: DirectoryDeleteRequest
    description: (request) This models a long running request
  - name: DirectoryDeleteRequest / Cancel
    description: This models an action on a request
paths:
  /v1/directories:
    post:
      tags:
        - Directory
      operationId: createDirectory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryInput'
      responses:
        '200':
          description: Directory created successfully
    get:
      tags:
        - Directory
      operationId: multigetDirectory
      parameters:
        - in: query
          name: id
          required: false
          schema:
            type: string
        - in: query
          name: name
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Directories retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryMultiResponse'
  '/v1/directories/{id}':
    get:
      tags:
        - Directory
      operationId: retrieveDirectory
      responses:
        '200':
          description: Directory retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryOutput'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
  /v1/file-types:
    post:
      tags:
        - FileType
      operationId: createFileType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileTypeInput'
      responses:
        '200':
          description: FileType created successfully
    get:
      tags:
        - FileType
      operationId: multigetFileType
      parameters:
        - in: query
          name: id
          required: false
          schema:
            type: string
        - in: query
          name: type
          required: false
          schema:
            type: string
      responses:
        '200':
          description: FileTypes retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTypeMultiResponse'
  '/v1/file-types/{id}':
    get:
      tags:
        - FileType
      operationId: retrieveFileType
      responses:
        '200':
          description: FileType retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileTypeOutput'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
  '/v1/directories/{parentId}/files':
    post:
      tags:
        - Directory / File
      operationId: createFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Directory--FileInput'
      responses:
        '200':
          description: File created successfully
      parameters:
        - in: path
          name: parentId
          description: Id of parent Directory
          required: true
          schema:
            type: string
    get:
      tags:
        - Directory / File
      operationId: multigetDirectory--File
      parameters:
        - in: query
          name: id
          required: false
          schema:
            type: integer
            format: int32
        - in: path
          name: parentId
          description: Id of parent Directory
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Files retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Directory--FileMultiResponse'
  '/v1/directories/{parentId}/files/{id}':
    get:
      tags:
        - Directory / File
      operationId: retrieveDirectory--File
      responses:
        '200':
          description: File retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Directory--FileOutput'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: parentId
          description: Id of parent Directory
          required: true
          schema:
            type: string
  /v1/directory-delete-requests:
    post:
      tags:
        - DirectoryDeleteRequest
      operationId: createDirectoryDeleteRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryDeleteRequestInput'
      responses:
        '200':
          description: DirectoryDeleteRequest created successfully
    get:
      tags:
        - DirectoryDeleteRequest
      operationId: multigetDirectoryDeleteRequest
      parameters:
        - in: query
          name: id
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: DirectoryDeleteRequests retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDeleteRequestMultiResponse'
  '/v1/directory-delete-requests/{id}':
    get:
      tags:
        - DirectoryDeleteRequest
      operationId: retrieveDirectoryDeleteRequest
      responses:
        '200':
          description: DirectoryDeleteRequest retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryDeleteRequestOutput'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
  '/v1/directory-delete-requests/{parentId}/cancels':
    post:
      tags:
        - DirectoryDeleteRequest / Cancel
      operationId: createCancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectoryDeleteRequest--CancelInput'
      responses:
        '200':
          description: Cancel created successfully
      parameters:
        - in: path
          name: parentId
          description: Id of parent DirectoryDeleteRequest
          required: true
          schema:
            type: integer
            format: int32
components:
  parameters: {}
  schemas:
    DirectoryInput:
      type: object
      properties:
        name:
          type: string
    DirectoryOutput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    DirectoryMultiResponse:
      type: object
      properties:
        page:
          description: 'Page offset, starting from 1'
          type: integer
          format: int32
        page-size:
          description: Size of returned page
          type: integer
          format: int32
        elements:
          description: Array of retrieved Directories
          type: array
          items:
            $ref: '#/components/schemas/DirectoryOutput'
    FileTypeInput:
      type: object
      properties:
        type:
          type: string
        format:
          type: string
    FileTypeOutput:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        format:
          type: string
    FileTypeMultiResponse:
      type: object
      properties:
        page:
          description: 'Page offset, starting from 1'
          type: integer
          format: int32
        page-size:
          description: Size of returned page
          type: integer
          format: int32
        elements:
          description: Array of retrieved FileTypes
          type: array
          items:
            $ref: '#/components/schemas/FileTypeOutput'
    Directory--FileInput:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        fileType-file-type-id:
          type: string
          example: Link to garage via id(s)
    Directory--FileOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        url:
          type: string
        fileType-file-type-id:
          type: string
          example: Link to garage via id(s)
    Directory--FileMultiResponse:
      type: object
      properties:
        page:
          description: 'Page offset, starting from 1'
          type: integer
          format: int32
        page-size:
          description: Size of returned page
          type: integer
          format: int32
        elements:
          description: Array of retrieved Directory--Files
          type: array
          items:
            $ref: '#/components/schemas/Directory--FileOutput'
    DirectoryDeleteRequestInput:
      type: object
      properties:
        directory-directory-id:
          type: string
          example: Link to garage via id(s)
    DirectoryDeleteRequestOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        directory-directory-id:
          type: string
          example: Link to garage via id(s)
    DirectoryDeleteRequestMultiResponse:
      type: object
      properties:
        page:
          description: 'Page offset, starting from 1'
          type: integer
          format: int32
        page-size:
          description: Size of returned page
          type: integer
          format: int32
        elements:
          description: Array of retrieved DirectoryDeleteRequests
          type: array
          items:
            $ref: '#/components/schemas/DirectoryDeleteRequestOutput'
    DirectoryDeleteRequest--CancelInput:
      type: object
      properties: {}
    ErrorBody:
      type: object
      properties:
        http-status:
          type: number
          description: The integer HTTP error status code for this problem
        error-code:
          type: string
          description: 'Service specific error code, more granular'
        message:
          type: string
          description: 'General, human readable error message'
        detail:
          type: string
          description: Human readable message specific to this occurrence
        path:
          type: string
          description: The request field that the error is about

