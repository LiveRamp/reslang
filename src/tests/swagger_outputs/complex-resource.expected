openapi: 3.0.1
info:
  title: Complex resource API
  description: This is the description of the API
  version: 0.0.1
servers:
  - url: 'https://api.liveramp.com/complex-resource'
tags:
  - name: Car
    description: this is a Car resource
  - name: Car / Wheel
    description: A wheel is owned by a car
paths:
  /v1/cars:
    post:
      tags:
        - Car
      operationId: createCar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarInput'
      responses:
        '200':
          description: Car created successfully
    get:
      tags:
        - Car
      operationId: multigetCar
      parameters:
        - in: query
          name: id
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: brand
          required: false
          schema:
            type: string
            enum:
              - TOYOTA
              - FORD
      responses:
        '200':
          description: Cars retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarMultiResponse'
  '/v1/cars/{id}':
    get:
      tags:
        - Car
      operationId: retrieveCar
      responses:
        '200':
          description: Car retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarOutput'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
  '/v1/cars/{parentId}/wheels':
    post:
      tags:
        - Car / Wheel
      operationId: createWheel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car--WheelInput'
      responses:
        '200':
          description: Wheel created successfully
      parameters:
        - in: path
          name: parentId
          description: Id of parent Car
          required: true
          schema:
            type: integer
            format: int32
    get:
      tags:
        - Car / Wheel
      operationId: multigetCar--Wheel
      parameters:
        - in: query
          name: id
          required: false
          schema:
            type: integer
            format: int32
        - in: path
          name: parentId
          description: Id of parent Car
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Wheels retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car--WheelMultiResponse'
  '/v1/cars/{parentId}/wheels/{id}':
    get:
      tags:
        - Car / Wheel
      operationId: retrieveCar--Wheel
      responses:
        '200':
          description: Wheel retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car--WheelOutput'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: parentId
          description: Id of parent Car
          required: true
          schema:
            type: integer
            format: int32
    put:
      tags:
        - Car / Wheel
      operationId: modifyCar--Wheel
      responses:
        '200':
          description: Wheel modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Car--WheelInput'
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - in: path
          name: parentId
          description: Id of parent Car
          required: true
          schema:
            type: integer
            format: int32
components:
  parameters: {}
  schemas:
    CarInput:
      type: object
      properties:
        brand:
          type: string
          enum:
            - TOYOTA
            - FORD
        engine:
          $ref: '#/components/schemas/SpecificationStructure'
        components:
          items:
            $ref: '#/components/schemas/SpecificationStructure'
          type: array
        home-garage-id:
          type: string
          example: Link to garage via id(s)
        manufacturer:
          $ref: '#/components/schemas/simple-resource-ManufacturerStructure'
        rented-garage-ids:
          items:
            type: string
            example: Link to garage via id(s)
          type: array
    CarOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        bought:
          type: string
          example: 2019-04-13 (date)
        brand:
          type: string
          enum:
            - TOYOTA
            - FORD
        engine:
          $ref: '#/components/schemas/SpecificationStructure'
        components:
          items:
            $ref: '#/components/schemas/SpecificationStructure'
          type: array
        home-garage-id:
          type: string
          example: Link to garage via id(s)
        manufacturer:
          $ref: '#/components/schemas/simple-resource-ManufacturerStructure'
        rented-garage-ids:
          items:
            type: string
            example: Link to garage via id(s)
          type: array
    CarMultiResponse:
      type: object
      properties:
        page:
          description: 'Page offset, starting from 1'
          type: integer
          format: int32
        page-size:
          description: Size of returned page
          type: integer
          format: int32
        elements:
          description: Array of retrieved Cars
          type: array
          items:
            $ref: '#/components/schemas/CarOutput'
    SpecificationStructure:
      type: object
      properties:
        type:
          type: string
        documentation:
          type: string
    Car--WheelInput:
      type: object
      properties:
        radius:
          type: number
    Car--WheelOutput:
      type: object
      properties:
        id:
          type: integer
          format: int32
        radius:
          type: number
    Car--WheelMultiResponse:
      type: object
      properties:
        page:
          description: 'Page offset, starting from 1'
          type: integer
          format: int32
        page-size:
          description: Size of returned page
          type: integer
          format: int32
        elements:
          description: Array of retrieved Car--Wheels
          type: array
          items:
            $ref: '#/components/schemas/Car--WheelOutput'
    simple-resource-ManufacturerStructure:
      type: object
      properties:
        company:
          type: string
    ErrorBody:
      type: object
      properties:
        http-status:
          type: number
          description: The integer HTTP error status code for this problem
        error-code:
          type: string
          description: 'Service specific error code, more granular'
        message:
          type: string
          description: 'General, human readable error message'
        detail:
          type: string
          description: Human readable message specific to this occurrence
        path:
          type: string
          description: The request field that the error is about

